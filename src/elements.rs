use crate::clue_errors::CluEError;

//<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
/// Specifies a particle type, such as a chemical element or an electron spin.
#[derive(PartialEq, Debug, Clone, Copy /*, EnumIter */)]
pub enum Element{
   Electron,
   Hydrogen,
   Helium,
   Lithium,
   Beryllium,
   Boron,
   Carbon,
   Nitrogen,
   Oxygen,
   Fluorine,
   Neon,
   Sodium,
   Magnesium,
   Aluminium,
   Silicon,
   Phosphorus,
   Sulfur,
   Chlorine,
   Argon,
   Potassium,
   Calcium, 
   Scandium,
   Titanium,
   Vanadium,
   Chromium,
   Manganese,
   Iron,
   Cobalt,
   Nickel,
   Copper,
   Zinc,
   Gallium,
   Germanium,
   Arsenic,
   Selenium,
   Bromine,
   Krypton,
   Rubidium,
   Strontium,
   Yttrium,
   Zirconium,
   Niobium,
   Molybdenum,
   Technetium,
   Ruthenium,
   Rhodium,
   Palladium,
   Silver,
   Cadmium,
   Indium,
   Tin,
   Antimony,
   Tellurium,
   Iodine,
   Xenon,
   Caesium,
   Barium,
   Lanthanum,
   Cerium,
   Praseodymium,
   Neodymium,
   Promethium,
   Samarium,
   Europium,
   Gadolinium,
   Terbium,
   Dysprosium,
   Holmium,
   Erbium,
   Thulium,
   Ytterbium,
   Lutetium,
   Hafnium,
   Tantalum,
   Tungsten,
   Rhenium,
   Osmium,
   Iridium,
   Platinum,
   Gold,
   Mercury,
   Thallium,
   Lead,
   Bismuth,
   Polonium,
   Astatine,
   Radon,
   Francium,
   Radium,
   Actinium,
   Thorium,
   Protactinium,
   Uranium,
   Neptunium,
   Plutonium,
   Americium,
   Curium,
   Berkelium,
   Californium,
   Einsteinium,
   Fermium,
   Mendelevium,
   Nobelium,
   Lawrencium,
   Rutherfordium,
   Dubnium,
   Seaborgium,
   Bohrium,
   Hassium,
   Meitnerium,
   Darmstadtium,
   Roentgenium,
   Copernicium,
   Nihonium,
   Flerovium,
   Moscovium,
   Livermorium,
   Tennessine,
   Oganesson,
}

impl Element{
  /// This function converts valid strings to `Element`s.
  /// Valid strings are the chemical symbols for the elements.
  /// Electrons have the symbol "e".
  /// Hydrogen has the standard symbol "H", but "D" and "T" are accepted aslo.
  /// This function will err if the symbol is not recognized.
  /// ``` 
  /// use clue_oxide::elements::Element;
  /// assert_eq!(Element::from("e"), Ok(Element::Electron));
  /// assert_eq!(Element::from("H"), Ok(Element::Hydrogen));
  /// ```
  pub fn from(element: &str) -> Result<Element,CluEError> {

    match element {
       "e" => Ok(Element::Electron),
       "H" | "D" | "T" => Ok(Element::Hydrogen),
      "He" => Ok(Element::Helium),
      "Li" => Ok(Element::Lithium),
      "Be" => Ok(Element::Beryllium),
       "B" => Ok(Element::Boron),
       "C" => Ok(Element::Carbon),
       "N" => Ok(Element::Nitrogen),
       "O" => Ok(Element::Oxygen),
       "F" => Ok(Element::Fluorine),
      "Ne" => Ok(Element::Neon),
      "Na" => Ok(Element::Sodium),
      "Al" => Ok(Element::Aluminium),
      "Si" => Ok(Element::Silicon),
       "P" => Ok(Element::Phosphorus),
       "S" => Ok(Element::Sulfur),
      "Cl" => Ok(Element::Chlorine),
      "Ar" => Ok(Element::Argon),
      "K" => Ok(Element::Potassium),
      "Ca" => Ok(Element::Calcium),
      "Sc" => Ok(Element::Scandium),
      "Ti" => Ok(Element::Titanium),
      "V" => Ok(Element::Vanadium),
      "Cr" => Ok(Element::Chromium),
      "Mn" => Ok(Element::Manganese),
      "Fe" => Ok(Element::Iron),
      "Co" => Ok(Element::Cobalt),
      "Ni" => Ok(Element::Nickel),
      "Cu" => Ok(Element::Copper),
      "Zn" => Ok(Element::Zinc),
      "Ga" => Ok(Element::Gallium),
      "Ge" => Ok(Element::Germanium),
      "As" => Ok(Element::Arsenic),
      "Se" => Ok(Element::Selenium),
      "Br" => Ok(Element::Bromine),
      "Kr" => Ok(Element::Krypton),
      "Rb" => Ok(Element::Rubidium),
      "Sr" => Ok(Element::Strontium),
      "Y" => Ok(Element::Yttrium),
      "Zr" => Ok(Element::Zirconium),
      "Nb" => Ok(Element::Niobium),
      "Mo" => Ok(Element::Molybdenum),
      "Tc" => Ok(Element::Technetium),
      "Ru" => Ok(Element::Ruthenium),
      "Rh" => Ok(Element::Rhodium),
      "Pd" => Ok(Element::Palladium),
      "Ag" => Ok(Element::Silver),
      "Cd" => Ok(Element::Cadmium),
      "In" => Ok(Element::Indium),
      "Sn" => Ok(Element::Tin),
      "Sb" => Ok(Element::Antimony),
      "Te" => Ok(Element::Tellurium),
      "I" => Ok(Element::Iodine),
      "Xe" => Ok(Element::Xenon),
      "Cs" => Ok(Element::Caesium),
      "Ba" => Ok(Element::Barium),
      "La" => Ok(Element::Lanthanum),
      "Ce" => Ok(Element::Cerium),
      "Pr" => Ok(Element::Praseodymium),
      "Nd" => Ok(Element::Neodymium),
      "Pm" => Ok(Element::Promethium),
      "Sm" => Ok(Element::Samarium),
      "Eu" => Ok(Element::Europium),
      "Gd" => Ok(Element::Gadolinium),
      "Tb" => Ok(Element::Terbium),
      "Dy" => Ok(Element::Dysprosium),
      "Ho" => Ok(Element::Holmium),
      "Er" => Ok(Element::Erbium),
      "Tm" => Ok(Element::Thulium),
      "Yb" => Ok(Element::Ytterbium),
      "Lu" => Ok(Element::Lutetium),
      "Hf" => Ok(Element::Hafnium),
      "Ta" => Ok(Element::Tantalum),
      "W" => Ok(Element::Tungsten),
      "Re" => Ok(Element::Rhenium),
      "Os" => Ok(Element::Osmium),
      "Ir" => Ok(Element::Iridium),
      "Pt" => Ok(Element::Platinum),
      "Au" => Ok(Element::Gold),
      "Hg" => Ok(Element::Mercury),
      "Tl" => Ok(Element::Thallium),
      "Pb" => Ok(Element::Lead),
      "Bi" => Ok(Element::Bismuth),
      "Po" => Ok(Element::Polonium),
      "At" => Ok(Element::Astatine),
      "Rn" => Ok(Element::Radon),
      "Fr" => Ok(Element::Francium),
      "Ra" => Ok(Element::Radium),
      "Ac" => Ok(Element::Actinium),
      "Th" => Ok(Element::Thorium),
      "Pa" => Ok(Element::Protactinium),
      "U" => Ok(Element::Uranium),
      "Np" => Ok(Element::Neptunium),
      "Pu" => Ok(Element::Plutonium),
      "Am" => Ok(Element::Americium),
      "Cm" => Ok(Element::Curium),
      "Bk" => Ok(Element::Berkelium),
      "Cf" => Ok(Element::Californium),
      "Es" => Ok(Element::Einsteinium),
      "Fm" => Ok(Element::Fermium),
      "Md" => Ok(Element::Mendelevium),
      "No" => Ok(Element::Nobelium),
      "Lr" => Ok(Element::Lawrencium),
      "Rf" => Ok(Element::Rutherfordium),
      "Db" => Ok(Element::Dubnium),
      "Sg" => Ok(Element::Seaborgium),
      "Bh" => Ok(Element::Bohrium),
      "Hs" => Ok(Element::Hassium),
      "Mt" => Ok(Element::Meitnerium),
      "Ds" => Ok(Element::Darmstadtium),
      "Rg" => Ok(Element::Roentgenium),
      "Cn" => Ok(Element::Copernicium),
      "Nh" => Ok(Element::Nihonium),
      "Fl" => Ok(Element::Flerovium),
      "Mc" => Ok(Element::Moscovium),
      "Lv" => Ok(Element::Livermorium),
      "Ts" => Ok(Element::Tennessine),
      "Og" => Ok(Element::Oganesson),
      _ => Err(CluEError::CannotParseElement(element.to_string())),
    }
  }
}


impl std::fmt::Display for Element {
  fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {

    let string = match self{  
      Element::Electron => "e".to_string(),
      Element::Hydrogen => "H".to_string(),
      Element::Helium => "He".to_string(),
      Element::Lithium => "Li".to_string(),
      Element::Beryllium => "Be".to_string(),
      Element::Boron => "B".to_string(),
      Element::Carbon => "C".to_string(),
      Element::Nitrogen => "N".to_string(),
      Element::Oxygen => "O".to_string(),
      Element::Fluorine => "F".to_string(),
      Element::Neon => "Ne".to_string(),
      Element::Sodium => "Na".to_string(),
      Element::Magnesium => "Mg".to_string(),
      Element::Aluminium => "Al".to_string(),
      Element::Silicon => "Si".to_string(),
      Element::Phosphorus => "P".to_string(),
      Element::Sulfur => "S".to_string(),
      Element::Chlorine => "Cl".to_string(),
      Element::Argon => "Ar".to_string(),
      Element::Potassium => "K".to_string(),
      Element::Calcium => "Ca".to_string(),
      Element::Scandium => "Sc".to_string(),
      Element::Titanium => "Ti".to_string(),
      Element::Vanadium => "V".to_string(),
      Element::Chromium => "Cr".to_string(),
      Element::Manganese => "Mn".to_string(),
      Element::Iron => "Fe".to_string(),
      Element::Cobalt => "Co".to_string(),
      Element::Nickel => "Ni".to_string(),
      Element::Copper => "Cu".to_string(),
      Element::Zinc => "Zn".to_string(),
      Element::Gallium => "Ga".to_string(),
      Element::Germanium => "Ge".to_string(),
      Element::Arsenic => "As".to_string(),
      Element::Selenium => "Se".to_string(),
      Element::Bromine => "Br".to_string(),
      Element::Krypton => "Kr".to_string(),
      Element::Rubidium => "Rb".to_string(),
      Element::Strontium => "Sr".to_string(),
      Element::Yttrium => "Y".to_string(),
      Element::Zirconium => "Zr".to_string(),
      Element::Niobium => "Nb".to_string(),
      Element::Molybdenum => "Mo".to_string(),
      Element::Technetium => "Tc".to_string(),
      Element::Ruthenium => "Ru".to_string(),
      Element::Rhodium => "Rh".to_string(),
      Element::Palladium => "Pd".to_string(),
      Element::Silver => "Ag".to_string(),
      Element::Cadmium => "Cd".to_string(),
      Element::Indium => "In".to_string(),
      Element::Tin => "Sn".to_string(),
      Element::Antimony => "Sb".to_string(),
      Element::Tellurium => "Te".to_string(),
      Element::Iodine => "I".to_string(),
      Element::Xenon => "Xe".to_string(),
      Element::Caesium => "Cs".to_string(),
      Element::Barium => "Ba".to_string(),
      Element::Lanthanum => "La".to_string(),
      Element::Cerium => "Ce".to_string(),
      Element::Praseodymium => "Pr".to_string(),
      Element::Neodymium => "Nd".to_string(),
      Element::Promethium => "Pm".to_string(),
      Element::Samarium => "Sm".to_string(),
      Element::Europium => "Eu".to_string(),
      Element::Gadolinium => "Gd".to_string(),
      Element::Terbium => "Tb".to_string(),
      Element::Dysprosium => "Dy".to_string(),
      Element::Holmium => "Ho".to_string(),
      Element::Erbium => "Er".to_string(),
      Element::Thulium => "Tm".to_string(),
      Element::Ytterbium => "Yb".to_string(),
      Element::Lutetium => "Lu".to_string(),
      Element::Hafnium => "Hf".to_string(),
      Element::Tantalum => "Ta".to_string(),
      Element::Tungsten => "W".to_string(),
      Element::Rhenium => "Re".to_string(),
      Element::Osmium => "Os".to_string(),
      Element::Iridium => "Ir".to_string(),
      Element::Platinum => "Pt".to_string(),
      Element::Gold => "Au".to_string(),
      Element::Mercury => "Hg".to_string(),
      Element::Thallium => "Tl".to_string(),
      Element::Lead => "Pb".to_string(),
      Element::Bismuth => "Bi".to_string(),
      Element::Polonium => "Po".to_string(),
      Element::Astatine => "At".to_string(),
      Element::Radon => "Rn".to_string(),
      Element::Francium => "Fr".to_string(),
      Element::Radium => "Ra".to_string(),
      Element::Actinium => "Ac".to_string(),
      Element::Thorium => "Th".to_string(),
      Element::Protactinium => "Pa".to_string(),
      Element::Uranium => "U".to_string(),
      Element::Neptunium => "Np".to_string(),
      Element::Plutonium => "Pu".to_string(),
      Element::Americium => "Am".to_string(),
      Element::Curium => "Cm".to_string(),
      Element::Berkelium => "Bk".to_string(),
      Element::Californium => "Cf".to_string(),
      Element::Einsteinium => "Es".to_string(),
      Element::Fermium => "Fm".to_string(),
      Element::Mendelevium => "Md".to_string(),
      Element::Nobelium => "No".to_string(),
      Element::Lawrencium => "Lr".to_string(),
      Element::Rutherfordium => "Rf".to_string(),
      Element::Dubnium => "Db".to_string(),
      Element::Seaborgium => "Sg".to_string(),
      Element::Bohrium => "Bh".to_string(),
      Element::Hassium => "Ha".to_string(),
      Element::Meitnerium => "Mt".to_string(),
      Element::Darmstadtium => "Ds".to_string(),
      Element::Roentgenium => "Rg".to_string(),
      Element::Copernicium => "Cn".to_string(),
      Element::Nihonium => "Nh".to_string(),
      Element::Flerovium => "Fl".to_string(),
      Element::Moscovium => "Mc".to_string(),
      Element::Livermorium => "Lv".to_string(),
      Element::Tennessine => "Ts".to_string(),
      Element::Oganesson => "Og".to_string(),
    };
    write!(f,"{}",string)
  }
}
//>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

